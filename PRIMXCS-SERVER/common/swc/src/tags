!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/PRIMXSERVER/SRC/work/common/swc/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/be5b1fc65/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
AcceptAndTerminateClient	swc_ssl_handler.cpp	/^VOID CSSLHandler::AcceptAndTerminateClient()$/;"	f	class:CSSLHandler	typeref:typename:VOID
AcceptAndTerminateClient	swc_uds_handler.cpp	/^VOID CUDSHandler::AcceptAndTerminateClient()$/;"	f	class:CUDSHandler	typeref:typename:VOID
AcceptClient	swc_ssl_handler.cpp	/^VOID CSSLHandler::AcceptClient()$/;"	f	class:CSSLHandler	typeref:typename:VOID
AcceptClient	swc_uds_handler.cpp	/^VOID CUDSHandler::AcceptClient()$/;"	f	class:CUDSHandler	typeref:typename:VOID
AcceptSSL	swc_ssl_handler.cpp	/^VOID CSSLHandler::AcceptSSL(IN CSSLIONode* pnode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
AddNode	swc_ssl_handler.cpp	/^CSSLIONode* CSSLHandler::AddNode(IN SOCKET nsfd)$/;"	f	class:CSSLHandler	typeref:typename:CSSLIONode *
AddNode	swc_uds_handler.cpp	/^CIONode* CUDSHandler::AddNode(IN SOCKET nsfd)$/;"	f	class:CUDSHandler	typeref:typename:CIONode *
AddToDeleleMap	swc_ssl_handler.cpp	/^VOID CSSLHandler::AddToDeleleMap(IN CSSLIONode* pDel)$/;"	f	class:CSSLHandler	typeref:typename:VOID
AddToDeleleMap	swc_uds_handler.cpp	/^VOID CUDSHandler::AddToDeleleMap(IN CIONode* pdel)$/;"	f	class:CUDSHandler	typeref:typename:VOID
Attach	swc_mem_pool.cpp	/^VOID WCMemPool::Attach(IN VOID* pptr, IN UINT nLen)$/;"	f	class:WCMemPool	typeref:typename:VOID
CIONode	swc_ionode.cpp	/^CIONode::CIONode()$/;"	f	class:CIONode
CIONode	swc_ionode.cpp	/^CIONode::CIONode(IN SOCKET nsfd)$/;"	f	class:CIONode
CIONode	swc_ionode.cpp	/^CIONode::CIONode(SOCKET nsfd, IN UINT nbuflen)$/;"	f	class:CIONode
CIPHER_FORMAT_STRING	swc_ssl_handler.cpp	/^	#define CIPHER_FORMAT_STRING /;"	d	file:
CSSLHandler	swc_ssl_handler.cpp	/^CSSLHandler::CSSLHandler()$/;"	f	class:CSSLHandler
CSSLIONode	swc_ssl_ionode.cpp	/^CSSLIONode::CSSLIONode()$/;"	f	class:CSSLIONode
CSSLIONode	swc_ssl_ionode.cpp	/^CSSLIONode::CSSLIONode(UINT nbuflen)$/;"	f	class:CSSLIONode
CSSLWorkTh	swc_ssl_handler.cpp	/^CSSLWorkTh::CSSLWorkTh()$/;"	f	class:CSSLWorkTh
CUDSHandler	swc_uds_handler.cpp	/^CUDSHandler::CUDSHandler()$/;"	f	class:CUDSHandler
CWorkTh	swc_uds_handler.cpp	/^CWorkTh::CWorkTh()$/;"	f	class:CWorkTh
CheckAndDeleteIONode	swc_uds_handler.cpp	/^VOID CUDSHandler::CheckAndDeleteIONode()$/;"	f	class:CUDSHandler	typeref:typename:VOID
CheckRecvTimeOut	swc_ionode.cpp	/^SWC_BOOL CIONode::CheckRecvTimeOut()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
CheckRecvTimeOut	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::CheckRecvTimeOut()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
CheckSessionTimeout	swc_ssl_handler.cpp	/^VOID CSSLHandler::CheckSessionTimeout()$/;"	f	class:CSSLHandler	typeref:typename:VOID
CheckSessionTimeout	swc_uds_handler.cpp	/^VOID CUDSHandler::CheckSessionTimeout()$/;"	f	class:CUDSHandler	typeref:typename:VOID
Close	swc_ionode.cpp	/^VOID CIONode::Close()$/;"	f	class:CIONode	typeref:typename:VOID
Close	swc_sock.cpp	/^VOID WCSock::Close()$/;"	f	class:WCSock	typeref:typename:VOID
Close	swc_sock.cpp	/^VOID WCSock::Close(IN SOCKET sfd)$/;"	f	class:WCSock	typeref:typename:VOID
Close	swc_ssl_ionode.cpp	/^VOID CSSLIONode::Close(SWC_BOOL bClose)$/;"	f	class:CSSLIONode	typeref:typename:VOID
Close	swc_udsock.cpp	/^VOID WCUDSock::Close(IN SOCKET nsfd)$/;"	f	class:WCUDSock	typeref:typename:VOID
CloseConnectSfd	swc_udsock.cpp	/^VOID WCUDSock::CloseConnectSfd()$/;"	f	class:WCUDSock	typeref:typename:VOID
CloseDebugFile	swc_debug.cpp	/^VOID CloseDebugFile()$/;"	f	typeref:typename:VOID
CloseNoForce	swc_sock.cpp	/^VOID WCSock::CloseNoForce(IN SOCKET sfd)$/;"	f	class:WCSock	typeref:typename:VOID
CloseNoFprce	swc_sock.cpp	/^VOID WCSock::CloseNoFprce()$/;"	f	class:WCSock	typeref:typename:VOID
ClrFileSendMode	swc_ionode.cpp	/^VOID CIONode::ClrFileSendMode()$/;"	f	class:CIONode	typeref:typename:VOID
ClrFileSendMode	swc_ssl_ionode.cpp	/^VOID CSSLIONode::ClrFileSendMode()$/;"	f	class:CSSLIONode	typeref:typename:VOID
CompleteJob	swc_ionode.cpp	/^VOID CIONode::CompleteJob()$/;"	f	class:CIONode	typeref:typename:VOID
CompleteJob	swc_ssl_ionode.cpp	/^VOID CSSLIONode::CompleteJob()$/;"	f	class:CSSLIONode	typeref:typename:VOID
Connect	swc_sock.cpp	/^SOCKET WCSock::Connect(IN const CHAR* dstaddr, IN USHORT dstport)$/;"	f	class:WCSock	typeref:typename:SOCKET
Connect	swc_udsock.cpp	/^SOCKET WCUDSock::Connect()$/;"	f	class:WCUDSock	typeref:typename:SOCKET
ConnectEx	swc_sock.cpp	/^SOCKET WCSock::ConnectEx(IN const CHAR* dstaddr, IN USHORT dstport, IN const CHAR* bndaddr, IN U/;"	f	class:WCSock	typeref:typename:SOCKET
CopyRecvBuf	swc_ionode.cpp	/^CHAR* CIONode::CopyRecvBuf()$/;"	f	class:CIONode	typeref:typename:CHAR *
CopyRecvBuf	swc_ssl_ionode.cpp	/^CHAR* CSSLIONode::CopyRecvBuf()$/;"	f	class:CSSLIONode	typeref:typename:CHAR *
CopyTempBuf	swc_ionode.cpp	/^CHAR* CIONode::CopyTempBuf()$/;"	f	class:CIONode	typeref:typename:CHAR *
CopyTempBuf	swc_ssl_ionode.cpp	/^CHAR* CSSLIONode::CopyTempBuf()$/;"	f	class:CSSLIONode	typeref:typename:CHAR *
DMsg	swc_debug.cpp	/^VOID DMsg(INT option, const CHAR* comments, ...)$/;"	f	typeref:typename:VOID
DeleteNode	swc_ssl_handler.cpp	/^VOID CSSLHandler::DeleteNode(IN SOCKET nsfd, IN SWC_BOOL bAddToDeleteMap)$/;"	f	class:CSSLHandler	typeref:typename:VOID
DeleteNode	swc_uds_handler.cpp	/^void CUDSHandler::DeleteNode(IN SOCKET nsfd, IN SWC_BOOL bAddToDeleteMap)$/;"	f	class:CUDSHandler	typeref:typename:void
DeleteNodeFromJobQueue	swc_ssl_handler.cpp	/^VOID CSSLHandler::DeleteNodeFromJobQueue(IN CSSLIONode* pnode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
DeleteNodeFromJobQueue	swc_uds_handler.cpp	/^VOID CUDSHandler::DeleteNodeFromJobQueue(IN CIONode* pnode)$/;"	f	class:CUDSHandler	typeref:typename:VOID
DeleteNodeSafe	swc_ssl_handler.cpp	/^VOID CSSLHandler::DeleteNodeSafe(IN CSSLIONode* pNode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
DeleterThreadFunc	swc_uds_handler.cpp	/^PVOID CUDSHandler::DeleterThreadFunc(IN PVOID arg)$/;"	f	class:CUDSHandler	typeref:typename:PVOID
Destroy	swc_udsock.cpp	/^VOID WCUDSock::Destroy()$/;"	f	class:WCUDSock	typeref:typename:VOID
DetachNode	swc_ssl_handler.cpp	/^VOID CSSLHandler::DetachNode(IN CSSLIONode* pnode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
DetachNode	swc_uds_handler.cpp	/^VOID CUDSHandler::DetachNode(IN CIONode* pnode)$/;"	f	class:CUDSHandler	typeref:typename:VOID
Exit	swc_ssl_handler.cpp	/^SWC_BOOL CSSLWorkTh::Exit()$/;"	f	class:CSSLWorkTh	typeref:typename:SWC_BOOL
Exit	swc_ssl_handler.cpp	/^VOID CSSLHandler::Exit()$/;"	f	class:CSSLHandler	typeref:typename:VOID
Exit	swc_uds_handler.cpp	/^SWC_BOOL CWorkTh::Exit()$/;"	f	class:CWorkTh	typeref:typename:SWC_BOOL
Exit	swc_uds_handler.cpp	/^VOID CUDSHandler::Exit()$/;"	f	class:CUDSHandler	typeref:typename:VOID
FindNode	swc_ssl_handler.cpp	/^CSSLIONode* CSSLHandler::FindNode(IN SOCKET nsfd)$/;"	f	class:CSSLHandler	typeref:typename:CSSLIONode *
FindNode	swc_uds_handler.cpp	/^CIONode* CUDSHandler::FindNode(IN SOCKET nsfd)$/;"	f	class:CUDSHandler	typeref:typename:CIONode *
Free	swc_mem_pool.cpp	/^VOID WCMemPool::Free()$/;"	f	class:WCMemPool	typeref:typename:VOID
G_LOCK	swc_safty.cpp	/^pthread_mutex_t G_LOCK;$/;"	v	typeref:typename:pthread_mutex_t
GetFDesc	swc_ionode.cpp	/^FILE* CIONode::GetFDesc()$/;"	f	class:CIONode	typeref:typename:FILE *
GetFDesc	swc_ssl_ionode.cpp	/^FILE* CSSLIONode::GetFDesc()$/;"	f	class:CSSLIONode	typeref:typename:FILE *
GetFSentBytes	swc_ionode.cpp	/^UINT CIONode::GetFSentBytes()$/;"	f	class:CIONode	typeref:typename:UINT
GetFSentBytes	swc_ssl_ionode.cpp	/^UINT CSSLIONode::GetFSentBytes()$/;"	f	class:CSSLIONode	typeref:typename:UINT
GetFd	swc_ionode.cpp	/^SOCKET CIONode::GetFd()$/;"	f	class:CIONode	typeref:typename:SOCKET
GetFd	swc_ssl_ionode.cpp	/^SOCKET CSSLIONode::GetFd()$/;"	f	class:CSSLIONode	typeref:typename:SOCKET
GetIdleNode	swc_ssl_handler.cpp	/^CSSLIONode* CSSLHandler::GetIdleNode()$/;"	f	class:CSSLHandler	typeref:typename:CSSLIONode *
GetRecvPos	swc_ionode.cpp	/^INT CIONode::GetRecvPos()$/;"	f	class:CIONode	typeref:typename:INT
GetRecvPos	swc_ssl_ionode.cpp	/^INT CSSLIONode::GetRecvPos()$/;"	f	class:CSSLIONode	typeref:typename:INT
GetRecvPtr	swc_ionode.cpp	/^CHAR* CIONode::GetRecvPtr()$/;"	f	class:CIONode	typeref:typename:CHAR *
GetRecvPtr	swc_ssl_ionode.cpp	/^CHAR* CSSLIONode::GetRecvPtr()$/;"	f	class:CSSLIONode	typeref:typename:CHAR *
GetSSL	swc_ssl_ionode.cpp	/^SSL* CSSLIONode::GetSSL()$/;"	f	class:CSSLIONode	typeref:typename:SSL *
GetSSLError	swc_ssl_ionode.cpp	/^INT CSSLIONode::GetSSLError(SOCKET nsfd, INT nresult)$/;"	f	class:CSSLIONode	typeref:typename:INT
GetSSLError	swc_ssl_ionode.cpp	/^INT CSSLIONode::GetSSLError(SWC_BOOL bout)$/;"	f	class:CSSLIONode	typeref:typename:INT
GetSendPos	swc_ionode.cpp	/^INT CIONode::GetSendPos()$/;"	f	class:CIONode	typeref:typename:INT
GetSendPos	swc_ssl_ionode.cpp	/^INT CSSLIONode::GetSendPos()$/;"	f	class:CSSLIONode	typeref:typename:INT
GetSendPtr	swc_ionode.cpp	/^CHAR* CIONode::GetSendPtr()$/;"	f	class:CIONode	typeref:typename:CHAR *
GetSendPtr	swc_ssl_ionode.cpp	/^CHAR* CSSLIONode::GetSendPtr()$/;"	f	class:CSSLIONode	typeref:typename:CHAR *
GetSendingBytes	swc_ionode.cpp	/^UINT CIONode::GetSendingBytes()$/;"	f	class:CIONode	typeref:typename:UINT
GetSendingBytes	swc_ssl_ionode.cpp	/^UINT CSSLIONode::GetSendingBytes()$/;"	f	class:CSSLIONode	typeref:typename:UINT
GetXmlBuf	swc_ionode.cpp	/^WCString CIONode::GetXmlBuf()$/;"	f	class:CIONode	typeref:typename:WCString
GetXmlBuf	swc_ssl_ionode.cpp	/^WCString CSSLIONode::GetXmlBuf()$/;"	f	class:CSSLIONode	typeref:typename:WCString
HandlerThreadFunc	swc_ssl_handler.cpp	/^PVOID CSSLHandler::HandlerThreadFunc(IN PVOID arg)$/;"	f	class:CSSLHandler	typeref:typename:PVOID
HandlerThreadFunc	swc_uds_handler.cpp	/^PVOID CUDSHandler::HandlerThreadFunc(IN PVOID arg)$/;"	f	class:CUDSHandler	typeref:typename:PVOID
HasJob	swc_ionode.cpp	/^SWC_BOOL CIONode::HasJob()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
HasJob	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::HasJob()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
Init	swc_ionode.cpp	/^VOID CIONode::Init()$/;"	f	class:CIONode	typeref:typename:VOID
Init	swc_mem_pool.cpp	/^VOID WCMemPool::Init()$/;"	f	class:WCMemPool	typeref:typename:VOID
Init	swc_ssl_handler.cpp	/^SWC_BOOL CSSLHandler::Init(IN const CHAR* sip, $/;"	f	class:CSSLHandler	typeref:typename:SWC_BOOL
Init	swc_ssl_handler.cpp	/^SWC_BOOL CSSLWorkTh::Init(IN CSSLHandler* pparent)$/;"	f	class:CSSLWorkTh	typeref:typename:SWC_BOOL
Init	swc_uds_handler.cpp	/^SWC_BOOL CUDSHandler::Init(IN const CHAR* sio, $/;"	f	class:CUDSHandler	typeref:typename:SWC_BOOL
Init	swc_uds_handler.cpp	/^SWC_BOOL CWorkTh::Init(IN CUDSHandler* pparent)$/;"	f	class:CWorkTh	typeref:typename:SWC_BOOL
InitAsRecv	swc_ionode.cpp	/^SWC_BOOL CIONode::InitAsRecv(IN INT nlen)$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
InitAsRecv	swc_ssl_ionode.cpp	/^VOID CSSLIONode::InitAsRecv(INT nlen)$/;"	f	class:CSSLIONode	typeref:typename:VOID
InitCTX	swc_ssl_handler.cpp	/^SSL_CTX* CSSLHandler::InitCTX(IN const CHAR* scertfile, IN const CHAR* scalist, IN const CHAR* s/;"	f	class:CSSLHandler	typeref:typename:SSL_CTX *
InitForIdleMode	swc_ionode.cpp	/^VOID CIONode::InitForIdleMode()$/;"	f	class:CIONode	typeref:typename:VOID
InitForIdleMode	swc_ssl_ionode.cpp	/^VOID CSSLIONode::InitForIdleMode()$/;"	f	class:CSSLIONode	typeref:typename:VOID
IsBusy	swc_ionode.cpp	/^SWC_BOOL CIONode::IsBusy()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
IsBusy	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::IsBusy()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
IsConnected	swc_sock.cpp	/^SWC_BOOL WCSock::IsConnected()$/;"	f	class:WCSock	typeref:typename:SWC_BOOL
IsDMsgOn	swc_debug.cpp	/^unsigned int IsDMsgOn       (void) { return SWC_G_MODE_MSG_ON; }$/;"	f	typeref:typename:unsigned int
IsHeadRcvd	swc_ionode.cpp	/^SWC_BOOL CIONode::IsHeadRcvd()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
IsHeadRcvd	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::IsHeadRcvd()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
IsIdle	swc_ionode.cpp	/^SWC_BOOL CIONode::IsIdle()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
IsIdle	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::IsIdle()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
IsRecvMode	swc_ionode.cpp	/^SWC_BOOL CIONode::IsRecvMode()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
IsRecvMode	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::IsRecvMode()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
IsSendMode	swc_ionode.cpp	/^SWC_BOOL CIONode::IsSendMode()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
IsSendMode	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::IsSendMode()$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
Listen	swc_sock.cpp	/^SOCKET WCSock::Listen(IN USHORT nport, IN INT option, IN const CHAR* strip)$/;"	f	class:WCSock	typeref:typename:SOCKET
Listen	swc_udsock.cpp	/^SOCKET WCUDSock::Listen()$/;"	f	class:WCUDSock	typeref:typename:SOCKET
MemCpy	swc_mem_pool.cpp	/^VOID WCMemPool::MemCpy(IN VOID* pptr, IN UINT nLen)$/;"	f	class:WCMemPool	typeref:typename:VOID
MoveFirst	swc_mem_pool.cpp	/^VOID WCMemPool::MoveFirst()$/;"	f	class:WCMemPool	typeref:typename:VOID
OpenDebugFile	swc_debug.cpp	/^unsigned int OpenDebugFile(const CHAR* spath, UINT nlimit)$/;"	f	typeref:typename:unsigned int
PopJobQueue	swc_ssl_handler.cpp	/^CSSLIONode* CSSLHandler::PopJobQueue()$/;"	f	class:CSSLHandler	typeref:typename:CSSLIONode *
PopJobQueue	swc_uds_handler.cpp	/^CIONode* CUDSHandler::PopJobQueue()$/;"	f	class:CUDSHandler	typeref:typename:CIONode *
PushJobQueue	swc_ssl_handler.cpp	/^VOID CSSLHandler::PushJobQueue(IN CSSLIONode* pobj)$/;"	f	class:CSSLHandler	typeref:typename:VOID
PushJobQueue	swc_uds_handler.cpp	/^VOID CUDSHandler::PushJobQueue(IN CIONode* pobj)$/;"	f	class:CUDSHandler	typeref:typename:VOID
Read	swc_ionode.cpp	/^INT CIONode::Read(OUT VOID* buf, IN INT len)$/;"	f	class:CIONode	typeref:typename:INT
Read	swc_ionode.cpp	/^INT CIONode::Read(OUT VOID* buf, IN INT len, IN INT timeout, IN SWC_BOOL bFlexTimeOut)$/;"	f	class:CIONode	typeref:typename:INT
Read	swc_sock.cpp	/^INT WCSock::Read(IN SOCKET sfd, OUT CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Read	swc_sock.cpp	/^INT WCSock::Read(OUT CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Read	swc_ssl_ionode.cpp	/^INT CSSLIONode::Read(VOID* buf, INT len)$/;"	f	class:CSSLIONode	typeref:typename:INT
Read	swc_ssl_ionode.cpp	/^INT CSSLIONode::Read(VOID* buf, INT len, INT timeout, SWC_BOOL bFlexTimeOut)$/;"	f	class:CSSLIONode	typeref:typename:INT
Receive	swc_sock.cpp	/^INT WCSock::Receive(IN SOCKET sfd, OUT CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Receive	swc_sock.cpp	/^INT WCSock::Receive(OUT CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Recv	swc_udsock.cpp	/^INT WCUDSock::Recv(IN SOCKET nsfd, OUT VOID* pbuf, IN INT nlen, IN INT ntmout)$/;"	f	class:WCUDSock	typeref:typename:INT
RegAcceptedIP	swc_ssl_handler.cpp	/^VOID CSSLHandler::RegAcceptedIP(IN SOCKET nsfd)$/;"	f	class:CSSLHandler	typeref:typename:VOID
RegAcceptedIP	swc_uds_handler.cpp	/^VOID CUDSHandler::RegAcceptedIP(IN SOCKET nsfd)$/;"	f	class:CUDSHandler	typeref:typename:VOID
RegisterNode	swc_ssl_handler.cpp	/^VOID CSSLHandler::RegisterNode(IN CSSLIONode* pnode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
RegisterNode	swc_uds_handler.cpp	/^VOID CUDSHandler::RegisterNode(IN CIONode* pnode)$/;"	f	class:CUDSHandler	typeref:typename:VOID
RenewalLstEpoll	swc_ssl_handler.cpp	/^VOID CSSLHandler::RenewalLstEpoll()$/;"	f	class:CSSLHandler	typeref:typename:VOID
RenewalLstEpoll	swc_uds_handler.cpp	/^VOID CUDSHandler::RenewalLstEpoll()$/;"	f	class:CUDSHandler	typeref:typename:VOID
Reset	swc_ionode.cpp	/^VOID CIONode::Reset()$/;"	f	class:CIONode	typeref:typename:VOID
Reset	swc_ssl_ionode.cpp	/^VOID CSSLIONode::Reset()$/;"	f	class:CSSLIONode	typeref:typename:VOID
ResetBuffer	swc_ionode.cpp	/^VOID CIONode::ResetBuffer()$/;"	f	class:CIONode	typeref:typename:VOID
ResetBuffer	swc_ssl_ionode.cpp	/^VOID CSSLIONode::ResetBuffer()$/;"	f	class:CSSLIONode	typeref:typename:VOID
ResetRecv	swc_ionode.cpp	/^VOID CIONode::ResetRecv()$/;"	f	class:CIONode	typeref:typename:VOID
ResetRecv	swc_ssl_ionode.cpp	/^VOID CSSLIONode::ResetRecv()$/;"	f	class:CSSLIONode	typeref:typename:VOID
ResetSend	swc_ionode.cpp	/^VOID CIONode::ResetSend()$/;"	f	class:CIONode	typeref:typename:VOID
ResetSend	swc_ssl_ionode.cpp	/^VOID CSSLIONode::ResetSend()$/;"	f	class:CSSLIONode	typeref:typename:VOID
Run	swc_ssl_handler.cpp	/^SWC_BOOL CSSLHandler::Run()$/;"	f	class:CSSLHandler	typeref:typename:SWC_BOOL
Run	swc_ssl_handler.cpp	/^SWC_BOOL CSSLWorkTh::Run()$/;"	f	class:CSSLWorkTh	typeref:typename:SWC_BOOL
Run	swc_uds_handler.cpp	/^SWC_BOOL CUDSHandler::Run()$/;"	f	class:CUDSHandler	typeref:typename:SWC_BOOL
Run	swc_uds_handler.cpp	/^SWC_BOOL CWorkTh::Run()$/;"	f	class:CWorkTh	typeref:typename:SWC_BOOL
RunCheckToAllWorkThread	swc_ssl_handler.cpp	/^VOID CSSLHandler::RunCheckToAllWorkThread()$/;"	f	class:CSSLHandler	typeref:typename:VOID
RunCheckToAllWorkThread	swc_uds_handler.cpp	/^VOID CUDSHandler::RunCheckToAllWorkThread()$/;"	f	class:CUDSHandler	typeref:typename:VOID
SSLAcceptBlockMode	swc_ssl_handler.cpp	/^SWC_BOOL CSSLHandler::SSLAcceptBlockMode(IN SSL* ssl)$/;"	f	class:CSSLHandler	typeref:typename:SWC_BOOL
SSLAcceptNonBlockMode	swc_ssl_handler.cpp	/^SWC_BOOL CSSLHandler::SSLAcceptNonBlockMode(IN SSL* ssl)$/;"	f	class:CSSLHandler	typeref:typename:SWC_BOOL
SWC	swc_tool.cpp	/^namespace SWC$/;"	n	file:
SWC_G_IS_SSL_MUTEX_EXIT	swc_ssl_func.cpp	/^bool SWC_G_IS_SSL_MUTEX_EXIT = false;$/;"	v	typeref:typename:bool
SWC_G_IS_SSL_MUTEX_INIT	swc_ssl_func.cpp	/^bool SWC_G_IS_SSL_MUTEX_INIT = false;$/;"	v	typeref:typename:bool
SWC_G_LOG_FILE	swc_debug.cpp	/^FILE* SWC_G_LOG_FILE            = NULL;$/;"	v	typeref:typename:FILE *
SWC_G_LOG_FILE_PATH	swc_debug.cpp	/^CHAR  SWC_G_LOG_FILE_PATH[256];$/;"	v	typeref:typename:CHAR[256]
SWC_G_LOG_FILE_SIZE_LIMIT	swc_debug.cpp	/^UINT  SWC_G_LOG_FILE_SIZE_LIMIT = (10 * 1024 * 1024);$/;"	v	typeref:typename:UINT
SWC_G_MODE_DEBUG	swc_debug.cpp	/^unsigned int  SWC_G_MODE_DEBUG          = FALSE;$/;"	v	typeref:typename:unsigned int
SWC_G_MODE_MSG_ON	swc_debug.cpp	/^unsigned int  SWC_G_MODE_MSG_ON         = TRUE;$/;"	v	typeref:typename:unsigned int
SWC_G_SSL_LOCK	swc_ssl_func.cpp	/^pthread_mutex_t SWC_G_SSL_LOCK;$/;"	v	typeref:typename:pthread_mutex_t
SWC_IO_TIMEOUT_CALC	swc_ionode.cpp	/^#define SWC_IO_TIMEOUT_CALC(/;"	d	file:
SWC_IO_TIMEOUT_CALC	swc_ssl_ionode.cpp	/^#define SWC_IO_TIMEOUT_CALC(/;"	d	file:
Send	swc_sock.cpp	/^INT WCSock::Send(IN CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Send	swc_sock.cpp	/^INT WCSock::Send(IN SOCKET sfd, IN CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Send	swc_udsock.cpp	/^INT WCUDSock::Send(IN SOCKET nsfd, IN VOID* pbuf, IN INT nlen, IN INT ntmout)$/;"	f	class:WCUDSock	typeref:typename:INT
SetBlockMode	swc_sock.cpp	/^VOID WCSock::SetBlockMode(IN SOCKET nsfd)$/;"	f	class:WCSock	typeref:typename:VOID
SetBusy	swc_ionode.cpp	/^VOID CIONode::SetBusy()$/;"	f	class:CIONode	typeref:typename:VOID
SetBusy	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetBusy()$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetDebugModeOff	swc_debug.cpp	/^VOID         SetDebugModeOff() { SWC_G_MODE_DEBUG  = FALSE; }$/;"	f	typeref:typename:VOID
SetDebugModeOn	swc_debug.cpp	/^VOID         SetDebugModeOn () { SWC_G_MODE_DEBUG  = TRUE; }$/;"	f	typeref:typename:VOID
SetDisableOneShotNode	swc_ssl_handler.cpp	/^VOID CSSLHandler::SetDisableOneShotNode(IN CSSLIONode* pnode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
SetDisableOneShotNode	swc_uds_handler.cpp	/^VOID CUDSHandler::SetDisableOneShotNode(IN CIONode* pnode)$/;"	f	class:CUDSHandler	typeref:typename:VOID
SetEnableOneShotNode	swc_ssl_handler.cpp	/^VOID CSSLHandler::SetEnableOneShotNode(IN CSSLIONode* pnode)$/;"	f	class:CSSLHandler	typeref:typename:VOID
SetEnableOneShotNode	swc_uds_handler.cpp	/^VOID CUDSHandler::SetEnableOneShotNode(IN CIONode* pnode)$/;"	f	class:CUDSHandler	typeref:typename:VOID
SetFd	swc_ionode.cpp	/^VOID CIONode::SetFd(IN SOCKET nsfd)$/;"	f	class:CIONode	typeref:typename:VOID
SetFd	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetFd(SOCKET nsfd)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetFileSendMode	swc_ionode.cpp	/^SWC_BOOL CIONode::SetFileSendMode(IN const CHAR* spath, IN UINT nbsize)$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
SetFileSendMode	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::SetFileSendMode(const CHAR* spath, UINT nbsize)$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
SetFileSendNext	swc_ionode.cpp	/^SWC_BOOL CIONode::SetFileSendNext()$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
SetFileSendNext	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetFileSendNext()$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetHeadEmpty	swc_ionode.cpp	/^VOID CIONode::SetHeadEmpty()$/;"	f	class:CIONode	typeref:typename:VOID
SetHeadEmpty	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetHeadEmpty()$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetHeadRcvd	swc_ionode.cpp	/^VOID CIONode::SetHeadRcvd()$/;"	f	class:CIONode	typeref:typename:VOID
SetHeadRcvd	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetHeadRcvd()$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetIOFile	swc_udsock.cpp	/^VOID WCUDSock::SetIOFile(IN const CHAR* siofile)$/;"	f	class:WCUDSock	typeref:typename:VOID
SetIdle	swc_ionode.cpp	/^VOID CIONode::SetIdle()$/;"	f	class:CIONode	typeref:typename:VOID
SetIdle	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetIdle()$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetMsgOff	swc_debug.cpp	/^VOID         SetMsgOff      () { SWC_G_MODE_MSG_ON = FALSE; }$/;"	f	typeref:typename:VOID
SetMsgOn	swc_debug.cpp	/^VOID         SetMsgOn       () { SWC_G_MODE_MSG_ON = TRUE; }$/;"	f	typeref:typename:VOID
SetNonBlockMode	swc_sock.cpp	/^VOID WCSock::SetNonBlockMode()$/;"	f	class:WCSock	typeref:typename:VOID
SetNonBlockMode	swc_sock.cpp	/^VOID WCSock::SetNonBlockMode(IN SOCKET sfd)$/;"	f	class:WCSock	typeref:typename:VOID
SetNonBlockMode	swc_udsock.cpp	/^VOID WCUDSock::SetNonBlockMode(IN SOCKET nsfd)$/;"	f	class:WCUDSock	typeref:typename:VOID
SetRecvMode	swc_ionode.cpp	/^SWC_BOOL CIONode::SetRecvMode(IN INT nlen)$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
SetRecvMode	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::SetRecvMode(INT nlen)$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
SetRecvPos	swc_ionode.cpp	/^VOID CIONode::SetRecvPos(IN INT npos)$/;"	f	class:CIONode	typeref:typename:VOID
SetRecvPos	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetRecvPos(INT npos)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetRecvPosAdd	swc_ionode.cpp	/^VOID CIONode::SetRecvPosAdd(IN INT npos)$/;"	f	class:CIONode	typeref:typename:VOID
SetRecvPosAdd	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetRecvPosAdd(INT npos)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetRecvPtr	swc_ionode.cpp	/^VOID CIONode::SetRecvPtr(IN CHAR* pbuf)$/;"	f	class:CIONode	typeref:typename:VOID
SetRecvPtr	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetRecvPtr(CHAR* pbuf)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetSSL	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetSSL(SSL* pssl)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetSendMode	swc_ionode.cpp	/^SWC_BOOL CIONode::SetSendMode(IN VOID* pbuf, IN INT nlen)$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
SetSendMode	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::SetSendMode(VOID* pbuf, INT nlen)$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
SetSendPos	swc_ionode.cpp	/^VOID CIONode::SetSendPos(IN INT npos)$/;"	f	class:CIONode	typeref:typename:VOID
SetSendPos	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetSendPos(INT npos)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetSendPosAdd	swc_ionode.cpp	/^VOID CIONode::SetSendPosAdd(IN INT npos)$/;"	f	class:CIONode	typeref:typename:VOID
SetSendPosAdd	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetSendPosAdd(INT npos)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetSendPtr	swc_ionode.cpp	/^VOID CIONode::SetSendPtr(IN CHAR* pbuf)$/;"	f	class:CIONode	typeref:typename:VOID
SetSendPtr	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetSendPtr(CHAR* pbuf)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetSize	swc_mem_pool.cpp	/^VOID WCMemPool::SetSize(IN UINT nLen)$/;"	f	class:WCMemPool	typeref:typename:VOID
SetTempBufAlloc	swc_ionode.cpp	/^SWC_BOOL CIONode::SetTempBufAlloc(IN INT nlen)$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
SetTempBufAlloc	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetTempBufAlloc(INT nlen)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetXmlBuf	swc_ionode.cpp	/^VOID CIONode::SetXmlBuf(WCString sxml)$/;"	f	class:CIONode	typeref:typename:VOID
SetXmlBuf	swc_ionode.cpp	/^VOID CIONode::SetXmlBuf(const CHAR* sxml)$/;"	f	class:CIONode	typeref:typename:VOID
SetXmlBuf	swc_ionode.cpp	/^VOID CIONode::SetXmlBuf(std::string sxml)$/;"	f	class:CIONode	typeref:typename:VOID
SetXmlBuf	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetXmlBuf(WCString sxml)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetXmlBuf	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetXmlBuf(const CHAR* sxml)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SetXmlBuf	swc_ssl_ionode.cpp	/^VOID CSSLIONode::SetXmlBuf(std::string sxml)$/;"	f	class:CSSLIONode	typeref:typename:VOID
SockErrMsg	swc_debug.cpp	/^VOID SockErrMsg(INT errnum)$/;"	f	typeref:typename:VOID
StartJob	swc_ionode.cpp	/^VOID CIONode::StartJob()$/;"	f	class:CIONode	typeref:typename:VOID
StartJob	swc_ssl_ionode.cpp	/^VOID CSSLIONode::StartJob()$/;"	f	class:CSSLIONode	typeref:typename:VOID
UpdateLastUpTime	swc_ssl_handler.cpp	/^VOID CSSLHandler::UpdateLastUpTime()$/;"	f	class:CSSLHandler	typeref:typename:VOID
UpdateLastUpTime	swc_uds_handler.cpp	/^VOID CUDSHandler::UpdateLastUpTime()$/;"	f	class:CUDSHandler	typeref:typename:VOID
WCMemPool	swc_mem_pool.cpp	/^WCMemPool::WCMemPool()$/;"	f	class:WCMemPool
WCSock	swc_sock.cpp	/^WCSock::WCSock()$/;"	f	class:WCSock
WCUDSock	swc_udsock.cpp	/^WCUDSock::WCUDSock()$/;"	f	class:WCUDSock
WCUDSock	swc_udsock.cpp	/^WCUDSock::WCUDSock(IN const CHAR* siofile)$/;"	f	class:WCUDSock
WF_SSL_CTX_check_private_key	swc_ssl_func.cpp	/^int WF_SSL_CTX_check_private_key(const SSL_CTX *ctx)$/;"	f	typeref:typename:int
WF_SSL_CTX_free	swc_ssl_func.cpp	/^void WF_SSL_CTX_free(SSL_CTX *ctx)$/;"	f	typeref:typename:void
WF_SSL_CTX_new	swc_ssl_func.cpp	/^SSL_CTX* WF_SSL_CTX_new(const SSL_METHOD* method)$/;"	f	typeref:typename:SSL_CTX *
WF_SSL_CTX_set_cipher_list	swc_ssl_func.cpp	/^int WF_SSL_CTX_set_cipher_list(SSL_CTX *ctx, const char *str)$/;"	f	typeref:typename:int
WF_SSL_CTX_set_default_passwd_cb_userdata	swc_ssl_func.cpp	/^void WF_SSL_CTX_set_default_passwd_cb_userdata(SSL_CTX *ctx, void *u)$/;"	f	typeref:typename:void
WF_SSL_CTX_use_PrivateKey_file	swc_ssl_func.cpp	/^int WF_SSL_CTX_use_PrivateKey_file(SSL_CTX *ctx, const char *file, int type)$/;"	f	typeref:typename:int
WF_SSL_CTX_use_certificate_file	swc_ssl_func.cpp	/^int WF_SSL_CTX_use_certificate_file(SSL_CTX *ctx, const char *file, int type)$/;"	f	typeref:typename:int
WF_SSL_accept	swc_ssl_func.cpp	/^int WF_SSL_accept(SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_connect	swc_ssl_func.cpp	/^int WF_SSL_connect(SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_exit	swc_ssl_func.cpp	/^void WF_SSL_exit()$/;"	f	typeref:typename:void
WF_SSL_free	swc_ssl_func.cpp	/^void WF_SSL_free(SSL *ssl)$/;"	f	typeref:typename:void
WF_SSL_get_error	swc_ssl_func.cpp	/^int WF_SSL_get_error(const SSL *ssl, int ret)$/;"	f	typeref:typename:int
WF_SSL_get_fd	swc_ssl_func.cpp	/^int WF_SSL_get_fd(const SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_get_rfd	swc_ssl_func.cpp	/^int WF_SSL_get_rfd(const SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_get_shutdown	swc_ssl_func.cpp	/^int WF_SSL_get_shutdown(const SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_get_state	swc_ssl_func.cpp	/^int WF_SSL_get_state(SSL *ssl )$/;"	f	typeref:typename:int
WF_SSL_get_wfd	swc_ssl_func.cpp	/^int WF_SSL_get_wfd(const SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_init	swc_ssl_func.cpp	/^void WF_SSL_init()$/;"	f	typeref:typename:void
WF_SSL_new	swc_ssl_func.cpp	/^SSL* WF_SSL_new(SSL_CTX *ctx)$/;"	f	typeref:typename:SSL *
WF_SSL_read	swc_ssl_func.cpp	/^int WF_SSL_read(SSL *ssl, void *buf, int num)$/;"	f	typeref:typename:int
WF_SSL_set_fd	swc_ssl_func.cpp	/^int WF_SSL_set_fd(SSL *ssl, int fd)$/;"	f	typeref:typename:int
WF_SSL_set_mode	swc_ssl_func.cpp	/^int WF_SSL_set_mode(SSL *ssl, long mode)$/;"	f	typeref:typename:int
WF_SSL_set_rfd	swc_ssl_func.cpp	/^int WF_SSL_set_rfd(SSL *ssl, int fd)$/;"	f	typeref:typename:int
WF_SSL_set_shutdown	swc_ssl_func.cpp	/^void WF_SSL_set_shutdown(SSL *ssl, int mode)$/;"	f	typeref:typename:void
WF_SSL_set_wfd	swc_ssl_func.cpp	/^int WF_SSL_set_wfd(SSL *ssl, int fd)$/;"	f	typeref:typename:int
WF_SSL_shutdown	swc_ssl_func.cpp	/^int WF_SSL_shutdown(SSL *ssl)$/;"	f	typeref:typename:int
WF_SSL_write	swc_ssl_func.cpp	/^int WF_SSL_write(SSL *ssl, const void *buf, int num)$/;"	f	typeref:typename:int
WaitJobCompleted	swc_ssl_handler.cpp	/^VOID CSSLHandler::WaitJobCompleted()$/;"	f	class:CSSLHandler	typeref:typename:VOID
WaitJobCompleted	swc_uds_handler.cpp	/^VOID CUDSHandler::WaitJobCompleted()$/;"	f	class:CUDSHandler	typeref:typename:VOID
WaitSendingComplete	swc_ionode.cpp	/^SWC_BOOL CIONode::WaitSendingComplete(IN INT nsfd)$/;"	f	class:CIONode	typeref:typename:SWC_BOOL
WaitSendingComplete	swc_ssl_ionode.cpp	/^SWC_BOOL CSSLIONode::WaitSendingComplete(INT nsfd)$/;"	f	class:CSSLIONode	typeref:typename:SWC_BOOL
WorkThreadFunc	swc_ssl_handler.cpp	/^PVOID CSSLWorkTh::WorkThreadFunc(IN PVOID arg)$/;"	f	class:CSSLWorkTh	typeref:typename:PVOID
WorkThreadFunc	swc_uds_handler.cpp	/^PVOID CWorkTh::WorkThreadFunc(IN PVOID arg)$/;"	f	class:CWorkTh	typeref:typename:PVOID
Write	swc_ionode.cpp	/^INT CIONode::Write(IN VOID* buf, IN INT len)$/;"	f	class:CIONode	typeref:typename:INT
Write	swc_ionode.cpp	/^INT CIONode::Write(IN VOID* buf, IN INT len, IN INT timeout, IN SWC_BOOL bFlexTimeOut)$/;"	f	class:CIONode	typeref:typename:INT
Write	swc_sock.cpp	/^INT WCSock::Write(IN CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Write	swc_sock.cpp	/^INT WCSock::Write(IN SOCKET sfd, IN CHAR* buf, IN INT len, IN INT timeout)$/;"	f	class:WCSock	typeref:typename:INT
Write	swc_ssl_ionode.cpp	/^INT CSSLIONode::Write(VOID* buf, INT len)$/;"	f	class:CSSLIONode	typeref:typename:INT
Write	swc_ssl_ionode.cpp	/^INT CSSLIONode::Write(VOID* buf, INT len, INT timeout, SWC_BOOL bFlexTimeOut)$/;"	f	class:CSSLIONode	typeref:typename:INT
__SWC_DEBUG_CPP__	swc_debug.cpp	/^#define __SWC_DEBUG_CPP__$/;"	d	file:
__SWC_IONODE_CPP__	swc_ionode.cpp	/^#define __SWC_IONODE_CPP__$/;"	d	file:
__SWC_MEM_POOL_CPP__	swc_mem_pool.cpp	/^#define __SWC_MEM_POOL_CPP__$/;"	d	file:
__SWC_SAFTY_CPP__	swc_safty.cpp	/^#define __SWC_SAFTY_CPP__$/;"	d	file:
__SWC_SOCK_CPP__	swc_sock.cpp	/^#define __SWC_SOCK_CPP__$/;"	d	file:
__SWC_SSL_FUNC_CPP__	swc_ssl_func.cpp	/^#define __SWC_SSL_FUNC_CPP__$/;"	d	file:
__SWC_SSL_HANDLER_CPP__	swc_ssl_handler.cpp	/^#define __SWC_SSL_HANDLER_CPP__$/;"	d	file:
__SWC_SSL_IONODE_CPP__	swc_ssl_ionode.cpp	/^#define __SWC_SSL_IONODE_CPP__$/;"	d	file:
__SWC_TOOL_CPP__	swc_tool.cpp	/^#define __SWC_TOOL_CPP__$/;"	d	file:
__SWC_UDSOCK_CPP__	swc_udsock.cpp	/^#define __SWC_UDSOCK_CPP__$/;"	d	file:
__SWC_UDS_HANDLER_CPP__	swc_uds_handler.cpp	/^#define __SWC_UDS_HANDLER_CPP__$/;"	d	file:
_is_file_size_over	swc_debug.cpp	/^INT _is_file_size_over(const CHAR* spath, UINT lsize)$/;"	f	typeref:typename:INT
i2s	swc_tool.cpp	/^WCString i2s(IN INT ival)$/;"	f	namespace:SWC	typeref:typename:WCString
l2s	swc_tool.cpp	/^WCString l2s(IN INT lval)$/;"	f	namespace:SWC	typeref:typename:WCString
sh2s	swc_tool.cpp	/^WCString sh2s(IN SHORT shval)$/;"	f	namespace:SWC	typeref:typename:WCString
sock_close	swc_udsock.cpp	/^VOID WCUDSock::sock_close(IN INT fd)$/;"	f	class:WCUDSock	typeref:typename:VOID
sock_connect_uds	swc_udsock.cpp	/^INT WCUDSock::sock_connect_uds(IN const CHAR* str_file)$/;"	f	class:WCUDSock	typeref:typename:INT
sock_destory_uds	swc_udsock.cpp	/^VOID WCUDSock::sock_destory_uds(IN const CHAR* str_file)$/;"	f	class:WCUDSock	typeref:typename:VOID
sock_listen_uds	swc_udsock.cpp	/^INT WCUDSock::sock_listen_uds(IN const CHAR* str_file)$/;"	f	class:WCUDSock	typeref:typename:INT
sock_read	swc_udsock.cpp	/^INT WCUDSock::sock_read(IN INT sfd, OUT CHAR *buf, IN INT len, IN INT timeout)$/;"	f	class:WCUDSock	typeref:typename:INT
sock_write	swc_udsock.cpp	/^INT WCUDSock::sock_write(IN INT sfd, IN CHAR *buf, IN INT len, IN INT timeout)$/;"	f	class:WCUDSock	typeref:typename:INT
swc_chgrp	swc_tool.cpp	/^VOID swc_chgrp(IN WCString spath, IN WCString group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_chgrp	swc_tool.cpp	/^VOID swc_chgrp(IN const CHAR* spath, IN const CHAR* group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_chk_proc_exist	swc_tool.cpp	/^SWC_BOOL swc_chk_proc_exist(IN WCString proc)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_chk_proc_exist	swc_tool.cpp	/^SWC_BOOL swc_chk_proc_exist(IN const CHAR* proc)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_chmod	swc_tool.cpp	/^SWC_BOOL swc_chmod(IN WCString spath, IN INT own, IN INT grp, IN INT other)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_chmod	swc_tool.cpp	/^SWC_BOOL swc_chmod(IN const CHAR* spath, IN INT own, IN INT grp, IN INT other)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_chown	swc_tool.cpp	/^VOID swc_chown(IN WCString spath, IN WCString owner)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_chown	swc_tool.cpp	/^VOID swc_chown(IN const CHAR* spath, IN const CHAR* owner)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_chown_chgrp	swc_tool.cpp	/^VOID swc_chown_chgrp(IN WCString spath, IN WCString owner, IN WCString group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_chown_chgrp	swc_tool.cpp	/^VOID swc_chown_chgrp(IN const CHAR* spath, IN const CHAR* owner, IN const CHAR* group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_cls_apostrophe	swc_tool.cpp	/^CHAR* swc_cls_apostrophe(IN CHAR* strbuf)$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_cls_comma	swc_tool.cpp	/^CHAR* swc_cls_comma(IN CHAR* strbuf)$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_cls_linefeed	swc_tool.cpp	/^CHAR* swc_cls_linefeed(IN CHAR* strbuf)$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_cnt_match_file_in_dir	swc_tool.cpp	/^UINT swc_cnt_match_file_in_dir(IN WCString sdir, IN WCString slike)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_cnt_match_file_in_dir	swc_tool.cpp	/^UINT swc_cnt_match_file_in_dir(IN const CHAR* sdir, IN const CHAR* slike)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_cvt_chr_chr	swc_tool.cpp	/^CHAR* swc_cvt_chr_chr(IN CHAR* strbuf, IN CHAR cfrom, IN CHAR cto)$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_cvt_chr_str	swc_tool.cpp	/^CHAR* swc_cvt_chr_str(IN const CHAR* src,$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_fchgrp	swc_tool.cpp	/^VOID swc_fchgrp(IN INT fd, IN WCString group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_fchgrp	swc_tool.cpp	/^VOID swc_fchgrp(IN INT fd, IN const CHAR* group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_fchmod	swc_tool.cpp	/^SWC_BOOL swc_fchmod(IN INT fd, IN INT own, IN INT grp, IN INT other)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_fchown	swc_tool.cpp	/^VOID swc_fchown(IN INT fd, IN WCString owner)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_fchown	swc_tool.cpp	/^VOID swc_fchown(IN INT fd, IN const CHAR* owner)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_fchown_fchgrp	swc_tool.cpp	/^VOID swc_fchown_fchgrp(IN INT fd, IN WCString owner, IN WCString group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_fchown_fchgrp	swc_tool.cpp	/^VOID swc_fchown_fchgrp(IN INT fd, IN const CHAR* owner, IN const CHAR* group)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_free	swc_safty.cpp	/^void swc_free(void* pptr)$/;"	f	typeref:typename:void
swc_get_1st_mac	swc_tool.cpp	/^UINT swc_get_1st_mac(OUT UCHAR cmac[])$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_cpu_count	swc_tool.cpp	/^UINT swc_get_cpu_count()$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_dns	swc_tool.cpp	/^SWC_BOOL swc_get_dns(OUT CHAR* sdns, IN INT nlen)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_get_dns	swc_tool.cpp	/^WCString swc_get_dns()$/;"	f	namespace:SWC	typeref:typename:WCString
swc_get_eth_ip	swc_tool.cpp	/^UINT swc_get_eth_ip(IN WCString seth, IN WCString& sout, IN INT nlen)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_eth_ip	swc_tool.cpp	/^UINT swc_get_eth_ip(IN const CHAR* seth, IN CHAR* sout, IN INT nlen)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_file_size	swc_tool.cpp	/^UINT swc_get_file_size(IN WCString spath)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_file_size	swc_tool.cpp	/^UINT swc_get_file_size(IN const CHAR* spath)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_global_time	swc_tool.cpp	/^VOID swc_get_global_time(IN time_t ltime, OUT WCString& sret)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_get_local_time	swc_tool.cpp	/^VOID swc_get_local_time(IN time_t ltime, OUT WCString& sret)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_get_matched_extension_files_in_dir	swc_tool.cpp	/^UINT swc_get_matched_extension_files_in_dir(IN const CHAR* sDir, IN const CHAR* sExt, OUT WCArra/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_peer_ip	swc_tool.cpp	/^UINT swc_get_peer_ip(IN INT sfd)$/;"	f	namespace:SWC	typeref:typename:UINT
swc_get_remote_status	swc_tool.cpp	/^SWC_BOOL swc_get_remote_status(IN WCString seth, IN UINT srcip, IN UINT dstip)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_get_remote_status	swc_tool.cpp	/^SWC_BOOL swc_get_remote_status(IN WCString seth, IN WCString srcip, IN WCString dstip)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_get_remote_status	swc_tool.cpp	/^SWC_BOOL swc_get_remote_status(IN const CHAR* seth, IN UINT srcip, IN UINT dstip)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_get_remote_status	swc_tool.cpp	/^SWC_BOOL swc_get_remote_status(IN const CHAR* seth, IN const CHAR* srcip, IN const CHAR* dstip)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_get_smac_s	swc_tool.cpp	/^VOID swc_get_smac_s(OUT CHAR* smac, IN INT nlen, IN UINT lmacu, IN UINT lmacl)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_get_smac_w	swc_tool.cpp	/^VOID swc_get_smac_w(OUT WCString& smac, IN UINT lmacu, IN UINT lmacl)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_gt_to_lt	swc_tool.cpp	/^time_t swc_gt_to_lt(IN time_t gt)$/;"	f	namespace:SWC	typeref:typename:time_t
swc_iconv	swc_tool.cpp	/^INT swc_iconv(IN CHAR*       inbuf,$/;"	f	namespace:SWC	typeref:typename:INT
swc_is_dir_exists	swc_tool.cpp	/^SWC_BOOL swc_is_dir_exists(IN WCString sdir)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_dir_exists	swc_tool.cpp	/^SWC_BOOL swc_is_dir_exists(IN const CHAR* sdir)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_eth_exists	swc_tool.cpp	/^SWC_BOOL swc_is_eth_exists(IN WCString seth)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_eth_exists	swc_tool.cpp	/^SWC_BOOL swc_is_eth_exists(IN const CHAR* seth)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_file_exists	swc_tool.cpp	/^SWC_BOOL swc_is_file_exists(IN WCString sdir, IN WCString sfile)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_file_exists	swc_tool.cpp	/^SWC_BOOL swc_is_file_exists(IN const CHAR* sdir, IN const CHAR* sfile)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_file_size_over	swc_tool.cpp	/^SWC_BOOL swc_is_file_size_over(IN WCString spath, IN UINT lsize)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_file_size_over	swc_tool.cpp	/^SWC_BOOL swc_is_file_size_over(IN const CHAR* spath, IN UINT lsize)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_is_unicode_file	swc_tool.cpp	/^SWC_BOOL swc_is_unicode_file(IN const CHAR* spath)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_isnumber_str	swc_tool.cpp	/^SWC_BOOL swc_isnumber_str(IN WCString sNum)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_lt_to_gt	swc_tool.cpp	/^time_t swc_lt_to_gt(IN IN time_t lt)$/;"	f	namespace:SWC	typeref:typename:time_t
swc_malloc	swc_safty.cpp	/^void* swc_malloc(size_t nsize)$/;"	f	typeref:typename:void *
swc_mutex_destroy	swc_safty.cpp	/^void swc_mutex_destroy()$/;"	f	typeref:typename:void
swc_mutex_init	swc_safty.cpp	/^void swc_mutex_init()$/;"	f	typeref:typename:void
swc_mutex_is_locked	swc_safty.cpp	/^int swc_mutex_is_locked()$/;"	f	typeref:typename:int
swc_mutex_lock	swc_safty.cpp	/^void swc_mutex_lock()$/;"	f	typeref:typename:void
swc_mutex_unlock	swc_safty.cpp	/^void swc_mutex_unlock()$/;"	f	typeref:typename:void
swc_parse_file_name_from_path	swc_tool.cpp	/^SWC_BOOL swc_parse_file_name_from_path(IN const CHAR* spath, OUT CHAR* sout, IN INT nlen)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_realloc	swc_safty.cpp	/^void* swc_realloc(void* pptr, size_t nsize)$/;"	f	typeref:typename:void *
swc_rmdir	swc_tool.cpp	/^SWC_BOOL swc_rmdir(IN const CHAR* sdir)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_send_signal_to_proc	swc_tool.cpp	/^VOID swc_send_signal_to_proc(IN WCString proc, IN INT signo)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_send_signal_to_proc	swc_tool.cpp	/^VOID swc_send_signal_to_proc(IN const CHAR* proc, IN INT signo)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_set_dns	swc_tool.cpp	/^VOID swc_set_dns(IN WCString sdns)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_set_dns	swc_tool.cpp	/^VOID swc_set_dns(IN const CHAR* sdns)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_sleep	swc_tool.cpp	/^VOID swc_sleep(IN INT _sec, IN INT _usec)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_smac_insert_semicolon	swc_tool.cpp	/^VOID swc_smac_insert_semicolon(IN const CHAR* smac, OUT CHAR* sout, IN INT nlen)$/;"	f	namespace:SWC	typeref:typename:VOID
swc_smac_to_cmac	swc_tool.cpp	/^VOID swc_smac_to_cmac(IN const CHAR* smac, OUT UCHAR cmac[])$/;"	f	namespace:SWC	typeref:typename:VOID
swc_str_chr_right	swc_tool.cpp	/^CHAR* swc_str_chr_right(IN const CHAR* src, IN const CHAR find, OUT CHAR** ptrptr)$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_str_chr_right_csv	swc_tool.cpp	/^CHAR* swc_str_chr_right_csv(IN const CHAR* src, IN const CHAR find, OUT CHAR** ptrptr)$/;"	f	namespace:SWC	typeref:typename:CHAR *
swc_system	swc_tool.cpp	/^SWC_BOOL swc_system(IN const CHAR* scmd)$/;"	f	namespace:SWC	typeref:typename:SWC_BOOL
swc_toupper	swc_tool.cpp	/^CHAR* swc_toupper(IN CHAR* strbuf)$/;"	f	namespace:SWC	typeref:typename:CHAR *
time_get_day	swc_tool.cpp	/^INT time_get_day(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_day_of_week	swc_tool.cpp	/^INT time_get_day_of_week(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_hour	swc_tool.cpp	/^INT time_get_hour(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_min	swc_tool.cpp	/^INT time_get_min(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_mon	swc_tool.cpp	/^INT time_get_mon(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_sec	swc_tool.cpp	/^INT time_get_sec(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_week_of_mon	swc_tool.cpp	/^INT time_get_week_of_mon(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_get_year	swc_tool.cpp	/^INT time_get_year(IN time_t ltime)$/;"	f	namespace:SWC	typeref:typename:INT
time_ltos	swc_tool.cpp	/^VOID time_ltos(IN UINT ltime, OUT CHAR* stime, IN INT len)$/;"	f	namespace:SWC	typeref:typename:VOID
time_stol	swc_tool.cpp	/^time_t time_stol(IN const CHAR* strdate)$/;"	f	namespace:SWC	typeref:typename:time_t
time_vtol	swc_tool.cpp	/^time_t time_vtol(IN INT year, IN INT mon, IN INT day, IN INT hour, IN INT min, IN INT sec)$/;"	f	namespace:SWC	typeref:typename:time_t
ul2s	swc_tool.cpp	/^WCString ul2s(IN UINT ulval)$/;"	f	namespace:SWC	typeref:typename:WCString
~CIONode	swc_ionode.cpp	/^CIONode::~CIONode()$/;"	f	class:CIONode
~CSSLHandler	swc_ssl_handler.cpp	/^CSSLHandler::~CSSLHandler()$/;"	f	class:CSSLHandler
~CSSLIONode	swc_ssl_ionode.cpp	/^CSSLIONode::~CSSLIONode()$/;"	f	class:CSSLIONode
~CSSLWorkTh	swc_ssl_handler.cpp	/^CSSLWorkTh::~CSSLWorkTh()$/;"	f	class:CSSLWorkTh
~CUDSHandler	swc_uds_handler.cpp	/^CUDSHandler::~CUDSHandler()$/;"	f	class:CUDSHandler
~CWorkTh	swc_uds_handler.cpp	/^CWorkTh::~CWorkTh()$/;"	f	class:CWorkTh
~WCMemPool	swc_mem_pool.cpp	/^WCMemPool::~WCMemPool()$/;"	f	class:WCMemPool
~WCSock	swc_sock.cpp	/^WCSock::~WCSock()$/;"	f	class:WCSock
~WCUDSock	swc_udsock.cpp	/^WCUDSock::~WCUDSock()$/;"	f	class:WCUDSock
